<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>PIS • Calyco NOVA</title>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&family=Source+Sans+Pro:wght@600;700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<style>
:root{
  --ink:#f0ebf8; --mut:#b8c4cc; --bg:#532E8A; --bg2:#7B3FF2; --card:#1b152a;
  --stroke:#C8A951; --p:#532E8A; --g:#C8A951; --accent:#C8A951;
  --fxshadow:0 4px 8px rgba(83,46,138,0.2);
  --card-bg: #1b152a;
  --card-border: #C8A951;
  --chip-bg: #3f2c65;
  --chip-border: #C8A951;
  --table-bg: #1b152a;
  --table-border: rgba(255,255,255,0.1);
  --bg-grad-a: #532E8A;
  --bg-grad-b: #7B3FF2;
  --bg-grad-c: #C8A951;
}
*{box-sizing:border-box}
html,body{height:100%}
body{
  margin: 0;
  color: var(--ink);
  background: linear-gradient(135deg, var(--bg-grad-a), var(--bg-grad-b) 50%, var(--bg-grad-c));
  background-attachment: fixed;
  background-size: cover;
  font-family:Inter,system-ui,Segoe UI,Roboto,Arial,sans-serif;
}
a{color:#f0ebf8}
#app{min-height:100vh}
.container{max-width:1280px;margin:0 auto;padding:34px}
.container, #app, main {
  background: none !important;
}
.hrule{height:1px;background:linear-gradient(90deg,transparent,rgba(200,169,81,0.5),transparent);margin:22px 0}
.kicker{letter-spacing:.08em;text-transform:uppercase;font-weight:800;color:#f0ebf8}

.brand-chip{
  display:inline-flex;align-items:center;gap:8px;
  background:linear-gradient(90deg, rgba(83,46,138,.9), rgba(200,169,81,.9));
  color:#fff;border:1px solid rgba(200,169,81,.25);
  padding:6px 12px;border-radius:999px;font-size:12px;letter-spacing:.14em;
  text-transform:uppercase; box-shadow:0 4px 16px rgba(83,46,138,.35)
}

.card{
  background:var(--card-bg); color:var(--ink); border:1px solid var(--card-border); border-radius:14px; 
  padding:24px; box-shadow:var(--fxshadow); position:relative; overflow:hidden;
}
.card::before {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; height: 4px;
  background: linear-gradient(90deg, #532E8A, #C8A951);
}
.card:hover{ border-color:var(--g); box-shadow:0 8px 16px rgba(83,46,138,0.3) }

h1,h2,h3{font-family:"Source Sans Pro",Inter,sans-serif;font-weight:800;line-height:1.2;margin:0 0 16px; color:var(--ink)}
h1{font-size:3rem;background:linear-gradient(90deg,var(--accent),var(--p));-webkit-background-clip:text;background-clip:text;color:transparent;text-shadow:0 2px 10px rgba(200,169,81,.3)}
h2{font-size:2rem;padding-bottom:10px;border-left:4px solid #C8A951;padding-left:16px;margin-bottom:20px; color:var(--ink)}
h3{font-size:1.25rem;color:var(--accent);display:flex;align-items:center;gap:10px; color:var(--ink)}

.section-title{display:flex;align-items:center;gap:10px}
.section-title .material-icons{color:var(--accent)}

ul{margin:6px 0 0 18px; color:var(--ink)}
li{margin-bottom:8px; line-height:1.5}
table{width:100%;border-collapse:collapse; background:var(--table-bg); border:1px solid var(--table-border)}
td,th{padding:12px 16px;border-top:1px solid var(--table-border);vertical-align:top;color:var(--ink); font-weight:500}
th{color:#ffffff;text-align:left;background:linear-gradient(90deg, #532E8A, #C8A951); font-weight:700}

.tag{background:var(--g);color:#111;padding:4px 10px;border-radius:999px;font-size:12px;font-weight:800}
.chips{display:flex;gap:10px;flex-wrap:wrap}
.chip{background:var(--chip-bg);border:1px solid var(--chip-border);border-radius:12px;padding:8px 12px;font-weight:600; color:var(--ink)}

.grid{display:grid;gap:16px}
.grid.cols-3{grid-template-columns:repeat(3,1fr)}
.grid.cols-2{grid-template-columns:repeat(2,1fr)}
@media (max-width:1024px){.grid.cols-3{grid-template-columns:1fr 1fr}}
@media (max-width:720px){.grid.cols-3,.grid.cols-2{grid-template-columns:1fr}}

.hero{
  display:grid;grid-template-columns:1.1fr .9fr;gap:28px;align-items:center;
  background:var(--card-bg); border:1px solid var(--card-border); border-radius:18px; padding:26px 28px; 
  box-shadow:var(--fxshadow); position:relative; overflow:hidden;
}
.hero::before {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; height: 4px;
  background: linear-gradient(90deg, #532E8A, #C8A951);
}
.subtitle{font-size:18px;color:var(--mut);margin:10px 0 0; line-height:1.5}

.pill{display:inline-flex;align-items:center;gap:8px;background:var(--chip-bg);border:1px solid var(--chip-border);border-radius:12px;padding:10px 14px;font-weight:700; color:var(--ink)}
.pill .material-icons{color:var(--accent)}

.step{
  border-left:3px solid var(--g);padding:16px 20px;margin:12px 0;
  background:var(--card-bg); border-radius:8px; color:var(--ink); border:1px solid rgba(200,169,81,0.2);
  position:relative; overflow:hidden;
}
.step::before {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; height: 2px;
  background: linear-gradient(90deg, #532E8A, #C8A951);
}

.topbar{display:flex;gap:10px;justify-content:flex-end;margin-bottom:10px}
.btn{display:inline-flex;align-items:center;gap:8px;background:linear-gradient(90deg,var(--p),var(--g));border:0;color:#fff;padding:10px 14px;border-radius:10px;font-weight:800;cursor:pointer;box-shadow:0 6px 18px rgba(83,46,138,.35)}
.btn:hover{box-shadow:0 8px 20px rgba(200,169,81,.4)}
.btn .material-icons{font-size:18px}

.loading{text-align:center;padding:60px 20px;color:var(--ink);font-size:18px}
.error{text-align:center;padding:60px 20px;color:#ef4444;font-size:18px;background:var(--card-bg);border-radius:14px;margin:20px 0; border:1px solid var(--card-border); position:relative; overflow:hidden;}
.error::before {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; height: 4px;
  background: linear-gradient(90deg, #532E8A, #C8A951);
}

/* Emoji support */
.emoji{font-size:1.2em; margin-right:8px}

/* Print styles - ensure white background for printing */
@media print{
  .card, .hero, table{ background:#fff !important; color:#000 !important; border-color:#ddd !important; }
  h1,h2,h3{ color:#000 !important; }
  .subtitle, ul, li, td, th{ color:#000 !important; }
  .chip, .pill{ background:#f3f4f6 !important; color:#000 !important; border-color:#ddd !important; }
  .card::before, .hero::before, .step::before, .error::before{ display:none !important; }
}
</style>
</head>
<body>
<main id="app" class="container">
  <div class="loading">
    <div class="material-icons" style="font-size:48px;color:var(--accent);margin-bottom:16px">hourglass_empty</div>
    Loading product information...
  </div>
</main>

<script>
// --------- helpers ----------
const esc = x => x==null?"":String(x).replace(/[&<>\"']/g,m=>({"&":"&amp;","<":"&lt;",">":"&gt;","\"":"&quot;","'":"&#39;"}[m]));
const li = a => (a||[]).map(x=>`<li>${esc(x)}</li>`).join("");
const kv = o => Object.entries(o||{}).map(([k,v])=>`<tr><td><b>${esc(labelize(k))}</b></td><td>${esc(v)}</td></tr>`).join("");
const steps = a => (a||[]).map(s=>`
  <div class="step">
    <b>${esc(s.step)}. ${esc(s.label||"")}</b>
    ${s.product?`<div><span class="tag">Product</span> ${esc(s.product)}</div>`:""}
    ${s.purpose?`<small class="subtitle">${esc(s.purpose)}</small>`:""}
  </div>`).join("");
const cap = (t)=> t? t.charAt(0).toUpperCase()+t.slice(1) : "";
const labelize = (k)=> String(k).replace(/_/g," ").replace(/\b\w/g,m=>m.toUpperCase());

// --------- icon helper for feature badges ----------
function iconFor(text=""){
  const t = (text||"").toLowerCase();
  if(/water|wash/i.test(t)) return "opacity";
  if(/adhes|bond/i.test(t)) return "construction";
  if(/coverage|spread|high/i.test(t)) return "straighten";
  if(/multi|surface|masonry|wood|metal|plaster|drywall/i.test(t)) return "category";
  return "check_circle";
}

// --------- render ----------
function renderPIS(d){
  const tools = (d.application_tools||[]).map(t=>cap(String(t)));
  const timings = d.timings||{};
  return `
  <div class="topbar">
    <button class="btn" onclick="window.print()"><span class="material-icons">print</span>Print</button>
  </div>

  <header class="hero">
    <div>
      <div class="brand-chip">CALYCO</div>
      <h1>${esc(d.sheet_title||"Product Information Sheet")}</h1>
      ${d.pis_title?`<div class="kicker">${esc(d.pis_title)}</div>`:""}
      ${d.product_overview?`<p class="subtitle" style="margin-top:10px">${esc(d.product_overview)}</p>`:""}
      <div class="hrule"></div>
      <div class="chips">
        ${(d.key_features||[]).slice(0,6).map(t=>`
          <span class="pill"><i class="material-icons">${iconFor(t)}</i>${esc(t)}</span>`).join("")}
      </div>
    </div>

    <div class="card">
      <h2 class="section-title"><span class="material-icons">insights</span>Quick Specs</h2>
      <div class="chips" style="margin-bottom:10px">
        ${d.coverage?`<span class="chip">Coverage: ${esc(d.coverage)}</span>`:""}
        ${d.finish?`<span class="chip">Finish: ${esc(d.finish)}</span>`:""}
        ${d.thinner?`<span class="chip">${esc(d.thinner)}</span>`:""}
      </div>
      <h3><span class="material-icons">timeline</span>Timings</h3>
      <div class="chips">
        ${Object.entries(timings).map(([k,v])=>`<span class="chip">${esc(labelize(k))}: ${esc(v)}</span>`).join("")}
      </div>
    </div>
  </header>

  <section class="card" style="margin-top:26px">
    <h2 class="section-title"><span class="material-icons">verified</span>Key Features & Benefits</h2>
    <div class="grid cols-3">
      ${(d.key_features||[]).map(f=>`
        <div class="card" style="padding:14px">
          <h3 class="section-title">
            <span class="emoji">${f.match(/^([\p{Extended_Pictographic}\uFE0F\u200D]+)/u)?.[1] || '✨'}</span>
            ${esc(f).replace(/^([\p{Extended_Pictographic}\uFE0F\u200D]+)/u,'')}
          </h3>
          <div class="subtitle">Benefit: ${esc(f)}</div>
        </div>`).join("")}
    </div>
  </section>

  ${d.available_sizes ? `
  <section class="card" style="margin-top:18px">
    <h2 class="section-title"><span class="material-icons">format_paint</span>Available Sizes</h2>
    <p class="subtitle">${esc(d.available_sizes)}</p>
  </section>
` : ""}

  <section class="card" style="margin-top:18px">
    <h2 class="section-title"><span class="material-icons">task_alt</span>Recommended Use</h2>
    ${d?.recommended_use?.intro?`<p class="kicker" style="margin:0 0 6px">${esc(d.recommended_use.intro)}</p>`:""}
    ${Array.isArray(d?.recommended_use?.items)?`<ul>${li(d.recommended_use.items)}</ul>`:""}
  </section>

  <section class="card" style="margin-top:18px">
    <h2 class="section-title"><span class="material-icons">schema</span>Application System</h2>
    ${steps(d.application_system)}
    ${tools.length?`<div class="chips" style="margin-top:12px">
      ${tools.map(t=>`<span class="chip">${esc(t)}</span>`).join("")}
    </div>`:""}
  </section>

  <section class="grid cols-2" style="margin-top:18px">
    <div class="card">
      <h2 class="section-title"><span class="material-icons">handyman</span>Surface Preparation</h2>
      <ul>${li(d.surface_preparation)}</ul>
    </div>
    <div class="card">
      <h2 class="section-title"><span class="material-icons">science</span>Technical Data</h2>
      <table>${kv(d.technical_data)}</table>
    </div>
  </section>

  <section class="grid cols-2" style="margin-top:18px">
    <div class="card">
      <h2 class="section-title"><span class="material-icons">brush</span>Application Notes</h2>
      <ul>${li(d.application)}</ul>
    </div>
    <div class="card">
      <h2 class="section-title"><span class="material-icons">inventory_2</span>Storage & Safety</h2>
      
      
      <ul>${li(d.storage_safety)}</ul>
    </div>
  </section>
  `;
}

// --------- fetch and render ----------
async function loadPISData() {
  const urlParams = new URLSearchParams(window.location.search);
  const src = urlParams.get('src');
  
  if (!src) {
    document.getElementById('app').innerHTML = `
      <div class="error">
        <div class="material-icons" style="font-size:48px;margin-bottom:16px">error</div>
        Missing JSON data source.<br>
        <small>Please provide a 'src' parameter (e.g., ?src=nova.json)</small>
      </div>
    `;
    return;
  }

  try {
    const response = await fetch(src);
    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }
    
    const data = await response.json();
    document.getElementById('app').innerHTML = renderPIS(data);
    
    // Update page title if available
    if (data.sheet_title) {
      document.title = `PIS • ${data.sheet_title}`;
    }
    
    // Load safety data from parallel JSON file
    await loadSafetyData(src);
    
  } catch (error) {
    console.error('Failed to load PIS data:', error);
    document.getElementById('app').innerHTML = `
      <div class="error">
        <div class="material-icons" style="font-size:48px;margin-bottom:16px">error</div>
        Failed to load product data.<br>
        <small>Error: ${error.message}</small><br>
        <small>Please check the file path and try again.</small>
      </div>
    `;
  }
}

// --------- load safety data ----------
async function loadSafetyData(mainSrc) {
  try {
    // Build safety JSON path by replacing .json with -safety.json
    const safetySrc = mainSrc.replace(/\.json$/, "-safety.json");
    
    const response = await fetch(safetySrc);
    if (!response.ok) {
      console.log(`Safety data not found at ${safetySrc}, skipping safety section`);
      return;
    }
    
    const safetyData = await response.json();
    if (safetyData.storage_safety && safetyData.storage_safety.length > 0) {
      renderSafetySection(safetyData.storage_safety);
    }
    
  } catch (error) {
    console.log('Safety data fetch failed, skipping safety section:', error.message);
  }
}

// --------- render safety section ----------
function renderSafetySection(safetyItems) {
  if (!safetyItems || !safetyItems.length) return;

  const section = document.createElement("section");
  section.className = "card";
  section.style.marginTop = "18px";
  
  section.innerHTML = `
    <h2 class="section-title">
      <span class="material-icons">health_and_safety</span>
      Storage & Safety Guidelines
    </h2>
    <ul style="padding-left: 1.5rem; color: black; background: #f9fafb; border-radius: 10px; padding: 1rem; border: 1px solid #e5e7eb;">
      ${safetyItems.map(item => `<li style="margin-bottom: 0.5rem; line-height: 1.5;">${esc(item)}</li>`).join("")}
    </ul>
  `;
  
  // Insert before footer or append to main container
  const footer = document.querySelector('footer');
  if (footer) {
    footer.parentNode.insertBefore(section, footer);
  } else {
    document.getElementById('app').appendChild(section);
  }
}

// --------- boot ----------
document.addEventListener('DOMContentLoaded', loadPISData);
</script>
</body>
</html>
